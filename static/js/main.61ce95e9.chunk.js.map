{"version":3,"sources":["static/images/avatar.jpg","static/images/stylemescreen.png","components/header.js","components/card.js","components/modal.js","components/content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","title","color","subtitle","marginBottom","Header","classes","style","width","margin","AppBar","position","Toolbar","Box","display","flexGrow","className","href","target","rel","src","Avatar","alt","Typography","align","variant","strings","typeSpeed","backSpeed","loop","root","maxWidth","media","height","objectFit","MediaCard","props","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","cardTitle","cardText","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","overflow","maxHeight","marginLeft","marginRight","TransitionsModal","React","useState","open","setOpen","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","modalTitle","modalSubtitle","modalDetails","modalDescription","gridContainer","paddingLeft","paddingRight","Content","Grid","container","direction","justify","item","xs","sm","md","StyleMeScreen","App","Component","Boolean","window","location","hostname","match","createMuiTheme","type","primary","main","secondary","contrastThreshold","tonalOffset","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.61ce95e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/avatar.8756d0c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stylemescreen.79161002.png\";","import React from 'react';\nimport Avatar from '../static/images/avatar.jpg';\nimport { AppBar, Toolbar, Grid, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typed from 'react-typed';\n\nconst useStyles = makeStyles(theme => ({\n\ttitle: {\n\t\tcolor: \"midnightblue\"\n\t},\n\tsubtitle: {\n\t\tcolor: \"midnightblue\",\n\t\tmarginBottom: \"3rem\"\n\t}\n}))\n\nconst Header = () => {\n\tconst classes = useStyles()\n\treturn (\n\t\t<div style={{width: '100%', margin: 'auto'}}>\n\t\t\t<AppBar position=\"static\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Box display='flex' flexGrow={1}>\n\t\t\t\t\t\t<a className=\"header-text\" href=\"https://tlmei.github.io\">Troy Mei</a>\n\t\t\t\t\t</Box>\n\t\t\t\t\t<a className=\"header-link\" href=\"https://github.com/tlmei\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n\t\t\t\t\t<a className=\"header-link\" href=\"https://www.linkedin.com/in/troymei/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\n\t\t\t\t\t<a className=\"header-link\" href=\"https://www.messenger.com/t/tmei0\" target=\"_blank\" rel=\"noopener noreferrer\">Messenger</a>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\n\t\t\t<Box>\n\t\t\t\t<img \n\t\t\t\t\tsrc={Avatar}\n\t\t\t\t\talt=\"avatar\"\n\t\t\t\t\tclassName=\"avatar-img\"\n\t\t\t\t/>\n\n\t\t\t\t<Typography className={classes.title} align=\"center\" variant=\"h5\">\n\t\t\t\t\t<Typed strings={[\"Hey, I'm Troy\"]} typeSpeed={40}/>\n\t\t\t\t</Typography>\n\t\t\t\t<br/>\n\t\t\t\t<Typography className={classes.subtitle} align=\"center\" variant=\"h6\">\n\t\t\t\t\t<Typed \n\t\t\t\t\t\tstrings={[\"Undergraduate Senior Computer Science Student\",\n\t\t\t\t\t\t\t\t\t\t\t\"Check out some work I've done below!\",\n\t\t\t\t\t\t\t\t\t\t\t\"Feel free to message me on messenger\",\n\t\t\t\t\t\t\t\t\t\t\t\"Caffeine + Lofi\"]}\n\t\t\t\t\t\ttypeSpeed={40}\n\t\t\t\t\t\tbackSpeed={60}\n\t\t\t\t\t\tloop\n\t\t\t\t\t/>\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t\t\n\t\t</div>\n\t)\n};\n  \nexport default Header;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Container } from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n  },\n  media: {\n    height: 400,\n    objectFit: 'cover',\n    width: '100%'\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n            {props.cardTitle}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.cardText}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Modal, Fade, Typography, Hidden } from '@material-ui/core';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport MediaCard from './card';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    overflow: \"hidden\",\n    maxWidth: 1000,\n    maxHeight: 1000,\n  },\n  image: {\n    display: \"block\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    maxWidth: \"100%\",\n    height: \"auto\",\n    padding: \"35px\",\n  }\n}));\n\nexport default function TransitionsModal(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  \n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <div onClick={handleOpen}>\n        <MediaCard \n          image={props.image} \n          cardTitle={props.cardTitle} \n          cardText={props.cardText}\n        />\n      </div>\n      \n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <img className={classes.image} src={props.image}/>\n            <Typography variant=\"h6\">{props.modalTitle}</Typography>\n            <Typography variant=\"subtitle1\">{props.modalSubtitle}</Typography>\n            <Typography variant=\"subtitle1\">{props.modalDetails}</Typography>\n            <Typography variant=\"body1\">{props.modalDescription}</Typography>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}","import React from 'react';\nimport MediaCard from './card';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport StyleMeScreen from '../static/images/stylemescreen.png';\n\nimport TransitionsModal from './modal';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 1500,\n    margin: \"auto\",\n    height: \"100%\"\n  },\n  gridContainer: {\n    paddingLeft: \"40px\",\n    paddingRight: \"40px\"\n  }\n}))\n\nconst Content = () => {\n  const classes = useStyles()\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={4} \n            direction=\"row\" \n            justify=\"center\" \n            alignItems=\"baseline\"\n            className={classes.gridContainer}>\n\n        <Grid item xs={0} sm={0} md={2}></Grid>\n\n        <Grid item xs={12} sm={12} md={4}>\n          <TransitionsModal \n            image=\"https://companies.naukri.com/rms-careers/wp-content/uploads/sites/21747/2019/11/how-much-applicant-tracking-software-cost.png\"\n            cardTitle=\"BNY Mellon\"\n            cardText=\"Summer Analyst\"\n            modalTitle=\"BNY Mellon\"\n            modalSubtitle=\"Full Stack Engineering Intern\"\n            modalDetails=\"Summer 2020 - New York City\"\n            modalDescription=\"During my virtual internship, I worked on the development of a pricing engine that leverages \n            modeling and predictive analytics to validate new business pricing and repricing rates, and provide visibility \n            into pricing decision implications. This involved building and documenting the API, implementing authorization, \n            mapping and translating pricing calculations, and working on the frontend when needed. I also collaborated\n            with my team to design and implement a caching mechanism that sped up the retrieval of user data. I worked mainly\n            in Python and Typescript.\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={4}>\n          <TransitionsModal \n            image=\"https://www.ncsc.gov.uk/images/phone-1537387_1280.png?mpwidth=545&mlwidth=737&twidth=961&dwidth=618&dpr=2.625&width=412\"\n            cardTitle=\"Payfone\"\n            cardText=\"Software Engineering Intern\"\n            modalTitle=\"Payone\"\n            modalSubtitle=\"Software Engineering Intern\"\n            modalDetails=\"Summer 2019 - New York City\"\n            modalDescription=\"Payfone is a customer identity platform that provides mobile and digital identity authentication \n            solutions for businesses. I spent the first 4 weeks migrating a web demo that showcased their trust platform into a\n            stand-alone application, and the remaining weeks developing a mobile application that allows developers to simulate \n            their authentication APIs onto customers' phones.\"\n          />\n        </Grid>\n\n        <Grid item xs={0} sm={0} md={2}></Grid>\n\n        <Grid item xs={12} sm={12} md={4}>\n          <TransitionsModal \n            image={StyleMeScreen}\n            cardTitle=\"StyleMe\"\n            cardText=\"\"\n            modalTitle=\"StyleMe\"\n            modalSubtitle=\"\"\n            modalDetails=\"\"\n            modalDescription=\"StyleMe is a mobile application that generates an outfit of the day given a user's clothing inputs, local weather,\n            and color theory. It was built using react native and node.js.\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={4}>\n\n        <TransitionsModal \n            image=\"https://uploads-ssl.webflow.com/5cf10538b2a819c7169a882e/5d972ca60288551b875c4639_facebook-messenger-bot.jpg\"\n            cardTitle=\"Messenger Bot\"\n            cardText=\"\"\n            modalTitle=\"\"\n            modalSubtitle=\"\"\n            modalDetails=\"\"\n            modalDescription=\"Developed a messenger bot hosted on Facebook's Messenger application using Python and Firebase to save and restore user conversations.\n            Implemented routing functionality that connects users to one another, eliminating the bot as a third- party after the conversation flow has been completed.\n            Increased messenger bot handling capacity to include various message types by leveraging Facebook's Send API.\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={4}>\n          <TransitionsModal \n            image=\"https://codehandbook.org/wp-content/uploads/2015/07/python_ff.jpg\"\n            cardTitle=\"Instagram Clone\"\n            cardText=\"\"\n            modalTitle=\"\"\n            modalSubtitle=\"\"\n            modalDetails=\"\"\n            modalDescription=\"Developed a web application for sharing photos that gives users control over viewing permissions using Python Flask.\n            Implemented can also comment, like, unfollow, and search photos by tag or poster functionalities.\n            Maintained privacy aspect by querying using SQL table definitions.\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={12} md={12}></Grid>\n\n      </Grid>\n    </div>\n  )\n};\n\nexport default Content;","import React from 'react';\nimport './App.css'\nimport { Grid } from '@material-ui/core';\n\nimport Header from './components/header';\nimport Content from './components/content';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Content />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport * as Colors from '@material-ui/core/colors';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\",\n    primary: {\n      main: '#add8e6',\n    },\n    secondary: {\n      main: '#f44336',\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}